server:
  port: 8090
spring:
  cloud:
    gateway:
      default-filters:
        - AddResponseHeader=source, tune
      routes:
        - id: api_route
          uri: http://localhost:8123
          # 匹配所有以"/api/"开头的路径
          predicates:
            - Path=/api/**

#        - id: add_request_header_route
#          uri: http://localhost:8123
#          predicates:
#            - Path=/api/**

#          filters:
#            - AddRequestHeader=tune, blue
#            - AddRequestParameter=name, tune
#            # 降级规则，原本的接口访问失败跳转到下面的url
#            - name: CircuitBreaker
#              args:
#                name: myCircuitBreaker
#                fallbackUri: forward:/fallback
#
#        - id: tune-fallback
#          uri: https://baidu.com
#          predicates:
#            - Path=/fallback

# gateway的日志级别设置为"trace"(最小的日志也输出)
logging:
  level:
    org:
      springframework:
        cloud:
          gateway: trace
# 以下配置指定了应用的名称、使用的协议（Dubbo）、注册中心的类型（Nacos）和地址
dubbo:
  application:
    # 设置应用的名称
    name: dubbo-springboot-demo-provider
  # 指定使用 Dubbo 协议，且端口设置为 -1，表示随机分配可用端口
  protocol:
    name: dubbo
    port: 22223
  registry:
    # 配置注册中心为 Nacos，使用的地址是 nacos://localhost:8848
    id: nacos-registry
    address: nacos://localhost:8848